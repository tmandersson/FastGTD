* Göra om Inbox-item till Action.
* Gå igenom klasserna. Fundera på designen enligt SRP.
* Gå igenom klasserna. Fundera på designen enlig OCP.
* Gå igenom klasserna. Fundera på designen enlig LSP.
* Gå igenom klasserna. Fundera på designen enlig ISP.
* Gå igenom klasserna. Fundera på designen enlig DIP.
* Implementera code coverage verktyg.
* Jobba vidare på funktionalitet ansvarsfullt. (Customer-tester för aktuellt kort.)

* Model convert sparar inbox-item som action.
* Model convert tar bort inbox-item som blev action.
* Action-items är persistenta.
* Testa att det fungerar på riktigt.

* Redundans i de 2 repositorys. Använd generics. IRepository<T> eller liknande.
* TDD:a om Inboxview använd inte designern, utan TDD:a allt.
* Lite smelly att jag måste stubba List på IViewn i Controller testerna.
* Eliminera FakeInBoxRepo, använd RhinoMocks istället.
* ShownInBoxFormTests.cs är inte konsekvent namngiven.

* Se till att kompilera alla tools som jag förlitar mig på istället. 
Så att jag har källkoden ifall nåt projekt läggs ner.
	* Använd gärna trunk och mergea regelbundet.
	* NUnit
	* NHibernate
	* Rhino mocks
	* SQLite
	* Bygg allt med NAnt.
	* Bygga nant själv? Eller ha källkoden iallafall. Eller bootstrap.bat el. liknande?

* Kolla upp om jag ska använda nån IoC-container.
	* Castle?
* NUnit 2.5 Final är släppt.
?* WPF-version av gränssnittet.
* In memory DB för db-testen.
* OO DB istället för Nhib?
* Testa öppen (open source) IDE. Ska kunna utveckla utan att vara bunden till MS (bygga på linux, VMWare?)
* Prova fluent nhibernate.

Om senare, web-del av systemet:
* Prova selenium för customer-tests.
