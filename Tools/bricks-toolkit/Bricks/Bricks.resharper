<Configuration>
  <CodeInspection>
    <AssertionMethod MethodName="System.Diagnostics.Debug.Assert" Parameter="0" Type="IS_TRUE" />
    <AssertionMethod MethodName="NUnit.Framework.Assert.IsTrue" Parameter="0" Type="IS_TRUE" />
    <AssertionMethod MethodName="NUnit.Framework.Assert.IsFalse" Parameter="0" Type="IS_FALSE" />
    <AssertionMethod MethodName="NUnit.Framework.Assert.IsNull" Parameter="0" Type="IS_NULL" />
    <AssertionMethod MethodName="NUnit.Framework.Assert.IsNotNull" Parameter="0" Type="IS_NOT_NULL" />
    <TerminatingMethod MethodName="System.Diagnostics.Debug.Fail" />
    <TerminatingMethod MethodName="System.Environment.Exit" />
    <TerminatingMethod MethodName="NUnit.Framework.Assert.Fail" />
    <NotNullableValueAttribute>
    </NotNullableValueAttribute>
    <CanBeNullValueAttribute>
    </CanBeNullValueAttribute>
  </CodeInspection>
  <CodeStyleSettings>
    <Sharing>SOLUTION</Sharing>
    <ExternalPath>
    </ExternalPath>
    <CSharp>
      <DefaultExceptionName>e</DefaultExceptionName>
      <PreferLongerNames>False</PreferLongerNames>
      <FieldNameSettings prefix="" suffix="" />
      <StaticFieldNameSettings prefix="" suffix="" />
      <ParameterNameSettings prefix="" suffix="" />
      <LocalVariableNameSettings prefix="" suffix="" />
      <FormatSettings>
        <INSERT_TABS>False</INSERT_TABS>
        <INDENT_SIZE>4</INDENT_SIZE>
        <CONTINUOUS_INDENT_MULTIPLIER>1</CONTINUOUS_INDENT_MULTIPLIER>
        <SPACE_BEFORE_METHOD_CALL_PARENTHESES>False</SPACE_BEFORE_METHOD_CALL_PARENTHESES>
        <SPACE_BEFORE_EMPTY_METHOD_CALL_PARENTHESES>False</SPACE_BEFORE_EMPTY_METHOD_CALL_PARENTHESES>
        <SPACE_BEFORE_METHOD_PARENTHESES>False</SPACE_BEFORE_METHOD_PARENTHESES>
        <SPACE_BEFORE_EMPTY_METHOD_PARENTHESES>False</SPACE_BEFORE_EMPTY_METHOD_PARENTHESES>
        <SPACE_WITHIN_METHOD_PARENTHESES>False</SPACE_WITHIN_METHOD_PARENTHESES>
        <SPACE_WITHIN_EMPTY_METHOD_PARENTHESES>False</SPACE_WITHIN_EMPTY_METHOD_PARENTHESES>
        <SPACE_WITHIN_METHOD_CALL_PARENTHESES>False</SPACE_WITHIN_METHOD_CALL_PARENTHESES>
        <SPACE_WITHIN_EMPTY_METHOD_CALL_PARENTHESES>False</SPACE_WITHIN_EMPTY_METHOD_CALL_PARENTHESES>
        <SPACE_BEFORE_ARRAY_ACCESS_BRACKETS>False</SPACE_BEFORE_ARRAY_ACCESS_BRACKETS>
        <SPACE_WITHIN_ARRAY_ACCESS_BRACKETS>False</SPACE_WITHIN_ARRAY_ACCESS_BRACKETS>
        <SPACE_BEFORE_IF_PARENTHESES>True</SPACE_BEFORE_IF_PARENTHESES>
        <SPACE_BEFORE_IFELSE_LEFT_BRACE>True</SPACE_BEFORE_IFELSE_LEFT_BRACE>
        <SPACE_WITHIN_IF_PARENTHESES>False</SPACE_WITHIN_IF_PARENTHESES>
        <SPACE_WITHIN_TYPECAST_PARENTHESES>False</SPACE_WITHIN_TYPECAST_PARENTHESES>
        <SPACE_AFTER_TYPECAST_PARENTHESES>True</SPACE_AFTER_TYPECAST_PARENTHESES>
        <SPACE_WITHIN_PARENTHESES>False</SPACE_WITHIN_PARENTHESES>
        <SPACE_BEFORE_DO_LEFT_BRACE>True</SPACE_BEFORE_DO_LEFT_BRACE>
        <SPACE_BEFORE_WHILE_LEFT_BRACE>True</SPACE_BEFORE_WHILE_LEFT_BRACE>
        <SPACE_BEFORE_WHILE_PARENTHESES>True</SPACE_BEFORE_WHILE_PARENTHESES>
        <SPACE_WITHIN_WHILE_PARENTHESES>False</SPACE_WITHIN_WHILE_PARENTHESES>
        <SPACE_BEFORE_CATCH_PARENTHESES>True</SPACE_BEFORE_CATCH_PARENTHESES>
        <SPACE_WITHIN_CATCH_PARENTHESES>False</SPACE_WITHIN_CATCH_PARENTHESES>
        <SPACE_BEFORE_TRY_LEFT_BRACE>True</SPACE_BEFORE_TRY_LEFT_BRACE>
        <SPACE_BEFORE_CATCH_LEFT_BRACE>True</SPACE_BEFORE_CATCH_LEFT_BRACE>
        <SPACE_BEFORE_FINALLY_LEFT_BRACE>True</SPACE_BEFORE_FINALLY_LEFT_BRACE>
        <SPACE_BEFORE_SWITCH_PARENTHESES>True</SPACE_BEFORE_SWITCH_PARENTHESES>
        <SPACE_WITHIN_SWITCH_PARENTHESES>False</SPACE_WITHIN_SWITCH_PARENTHESES>
        <SPACE_BEFORE_SWITCH_LEFT_BRACE>True</SPACE_BEFORE_SWITCH_LEFT_BRACE>
        <SPACE_BEFORE_FOR_PARENTHESES>True</SPACE_BEFORE_FOR_PARENTHESES>
        <SPACE_WITHIN_FOR_PARENTHESES>False</SPACE_WITHIN_FOR_PARENTHESES>
        <SPACE_BEFORE_FOR_LEFT_BRACE>True</SPACE_BEFORE_FOR_LEFT_BRACE>
        <SPACE_BEFORE_FOREACH_PARENTHESES>True</SPACE_BEFORE_FOREACH_PARENTHESES>
        <SPACE_WITHIN_FOREACH_PARENTHESES>False</SPACE_WITHIN_FOREACH_PARENTHESES>
        <SPACE_BEFORE_FOREACH_LEFT_BRACE>True</SPACE_BEFORE_FOREACH_LEFT_BRACE>
        <SPACE_BEFORE_USING_PARENTHESES>True</SPACE_BEFORE_USING_PARENTHESES>
        <SPACE_WITHIN_USING_PARENTHESES>False</SPACE_WITHIN_USING_PARENTHESES>
        <SPACE_BEFORE_USING_LEFT_BRACE>True</SPACE_BEFORE_USING_LEFT_BRACE>
        <SPACE_BEFORE_LOCK_PARENTHESES>True</SPACE_BEFORE_LOCK_PARENTHESES>
        <SPACE_WITHIN_LOCK_PARENTHESES>False</SPACE_WITHIN_LOCK_PARENTHESES>
        <SPACE_BEFORE_LOCK_LEFT_BRACE>True</SPACE_BEFORE_LOCK_LEFT_BRACE>
        <SPACE_BEFORE_TYPEOF_PARENTHESES>True</SPACE_BEFORE_TYPEOF_PARENTHESES>
        <SPACE_WITHIN_TYPEOF_PARENTHESES>False</SPACE_WITHIN_TYPEOF_PARENTHESES>
        <SPACE_BEFORE_FIXED_PARENTHESES>True</SPACE_BEFORE_FIXED_PARENTHESES>
        <SPACE_WITHIN_FIXED_PARENTHESES>False</SPACE_WITHIN_FIXED_PARENTHESES>
        <SPACE_BEFORE_FIXED_LEFT_BRACE>True</SPACE_BEFORE_FIXED_LEFT_BRACE>
        <SPACE_BEFORE_SIZEOF_PARENTHESES>True</SPACE_BEFORE_SIZEOF_PARENTHESES>
        <SPACE_WITHIN_SIZEOF_PARENTHESES>False</SPACE_WITHIN_SIZEOF_PARENTHESES>
        <SPACE_BEFORE_UNSAFE_LEFT_BRACE>True</SPACE_BEFORE_UNSAFE_LEFT_BRACE>
        <SPACE_BEFORE_TYPE_PARAMETER_ANGLE>False</SPACE_BEFORE_TYPE_PARAMETER_ANGLE>
        <SPACE_WITHIN_TYPE_PARAMETER_ANGLES>False</SPACE_WITHIN_TYPE_PARAMETER_ANGLES>
        <SPACE_BEFORE_TYPE_ARGUMENT_ANGLE>False</SPACE_BEFORE_TYPE_ARGUMENT_ANGLE>
        <SPACE_WITHIN_TYPE_ARGUMENT_ANGLES>False</SPACE_WITHIN_TYPE_ARGUMENT_ANGLES>
        <SPACE_AFTER_COMMA>True</SPACE_AFTER_COMMA>
        <SPACE_BEFORE_COMMA>False</SPACE_BEFORE_COMMA>
        <SPACE_BEFORE_FOR_SEMICOLON>False</SPACE_BEFORE_FOR_SEMICOLON>
        <SPACE_AFTER_FOR_SEMICOLON>True</SPACE_AFTER_FOR_SEMICOLON>
        <SPACE_BEFORE_TERNARY_QUEST>True</SPACE_BEFORE_TERNARY_QUEST>
        <SPACE_AFTER_TERNARY_QUEST>True</SPACE_AFTER_TERNARY_QUEST>
        <SPACE_BEFORE_TERNARY_COLON>True</SPACE_BEFORE_TERNARY_COLON>
        <SPACE_AFTER_TERNARY_COLON>True</SPACE_AFTER_TERNARY_COLON>
        <SPACE_BEFORE_ATTRIBUTE_COLON>True</SPACE_BEFORE_ATTRIBUTE_COLON>
        <SPACE_AFTER_ATTRIBUTE_COLON>True</SPACE_AFTER_ATTRIBUTE_COLON>
        <SPACE_BEFORE_EXTENDS_COLON>True</SPACE_BEFORE_EXTENDS_COLON>
        <SPACE_AFTER_EXTENDS_COLON>True</SPACE_AFTER_EXTENDS_COLON>
        <SPACE_BEFORE_TYPE_PARAMETER_CONSTRAINT_COLON>True</SPACE_BEFORE_TYPE_PARAMETER_CONSTRAINT_COLON>
        <SPACE_AFTER_TYPE_PARAMETER_CONSTRAINT_COLON>True</SPACE_AFTER_TYPE_PARAMETER_CONSTRAINT_COLON>
        <SPACE_AROUND_ASSIGNMENT_OP>True</SPACE_AROUND_ASSIGNMENT_OP>
        <SPACE_AROUND_LOGICAL_OP>True</SPACE_AROUND_LOGICAL_OP>
        <SPACE_AROUND_EQUALITY_OP>True</SPACE_AROUND_EQUALITY_OP>
        <SPACE_AROUND_RELATIONAL_OP>True</SPACE_AROUND_RELATIONAL_OP>
        <SPACE_AROUND_BITWISE_OP>True</SPACE_AROUND_BITWISE_OP>
        <SPACE_AROUND_ADDITIVE_OP>True</SPACE_AROUND_ADDITIVE_OP>
        <SPACE_AROUND_MULTIPLICATIVE_OP>False</SPACE_AROUND_MULTIPLICATIVE_OP>
        <SPACE_AROUND_SHIFT_OP>True</SPACE_AROUND_SHIFT_OP>
        <SPACE_AROUND_NULLCOALESCING_OP>True</SPACE_AROUND_NULLCOALESCING_OP>
        <SPACE_AFTER_AMPERSAND_OP>False</SPACE_AFTER_AMPERSAND_OP>
        <SPACE_AFTER_ASTERIK_OP>False</SPACE_AFTER_ASTERIK_OP>
        <SPACE_AROUND_ARROW_OP>False</SPACE_AROUND_ARROW_OP>
        <SPACE_AROUND_DOT>False</SPACE_AROUND_DOT>
        <SPACE_IN_SINGLELINE_ACCESSOR>True</SPACE_IN_SINGLELINE_ACCESSOR>
        <SPACE_IN_SINGLELINE_ANONYMOUS_METHOD>True</SPACE_IN_SINGLELINE_ANONYMOUS_METHOD>
        <SPACE_WITHIN_ATTRIBUTE_BRACKETS>False</SPACE_WITHIN_ATTRIBUTE_BRACKETS>
        <SPACE_BEFORE_SEMICOLON>False</SPACE_BEFORE_SEMICOLON>
        <SPACE_BEFORE_COLON_IN_CASE>False</SPACE_BEFORE_COLON_IN_CASE>
        <SPACE_BEFORE_NULLABLE_MARK>False</SPACE_BEFORE_NULLABLE_MARK>
        <SPACE_BEFORE_ARRAY_CREATION_BRACE>True</SPACE_BEFORE_ARRAY_CREATION_BRACE>
        <SPACE_BEFORE_ARRAY_RANK_BRACKETS>False</SPACE_BEFORE_ARRAY_RANK_BRACKETS>
        <SPACE_WITHIN_ARRAY_RANK_BRACKETS>False</SPACE_WITHIN_ARRAY_RANK_BRACKETS>
        <SPACE_WITHIN_ARRAY_RANK_EMPTY_BRACKETS>False</SPACE_WITHIN_ARRAY_RANK_EMPTY_BRACKETS>
        <SPACE_BEFORE_POINTER_ASTERIK_DECLARATION>False</SPACE_BEFORE_POINTER_ASTERIK_DECLARATION>
        <SPACE_WITHIN_SINGLE_LINE_ARRAY_INITIALIZER_BRACES>False</SPACE_WITHIN_SINGLE_LINE_ARRAY_INITIALIZER_BRACES>
        <TYPE_DECLARATION_BRACES>NEXT_LINE</TYPE_DECLARATION_BRACES>
        <INVOCABLE_DECLARATION_BRACES>NEXT_LINE</INVOCABLE_DECLARATION_BRACES>
        <ANONYMOUS_METHOD_DECLARATION_BRACES>NEXT_LINE_SHIFTED_2</ANONYMOUS_METHOD_DECLARATION_BRACES>
        <CASE_BLOCK_BRACES>NEXT_LINE_SHIFTED_2</CASE_BLOCK_BRACES>
        <OTHER_BRACES>NEXT_LINE</OTHER_BRACES>
        <EMPTY_BLOCK_STYLE>TOGETHER_SAME_LINE</EMPTY_BLOCK_STYLE>
        <PLACE_ELSE_ON_NEW_LINE>True</PLACE_ELSE_ON_NEW_LINE>
        <PLACE_WHILE_ON_NEW_LINE>False</PLACE_WHILE_ON_NEW_LINE>
        <PLACE_CATCH_ON_NEW_LINE>True</PLACE_CATCH_ON_NEW_LINE>
        <PLACE_FINALLY_ON_NEW_LINE>True</PLACE_FINALLY_ON_NEW_LINE>
        <KEEP_USER_LINEBREAKS>False</KEEP_USER_LINEBREAKS>
        <SIMPLE_EMBEDDED_STATEMENT_STYLE>DO_NOT_CHANGE</SIMPLE_EMBEDDED_STATEMENT_STYLE>
        <FORCE_IFELSE_BRACES_STYLE>ONLY_FOR_MULTILINE</FORCE_IFELSE_BRACES_STYLE>
        <FORCE_FOR_BRACES_STYLE>ONLY_FOR_MULTILINE</FORCE_FOR_BRACES_STYLE>
        <FORCE_FOREACH_BRACES_STYLE>ONLY_FOR_MULTILINE</FORCE_FOREACH_BRACES_STYLE>
        <FORCE_WHILE_BRACES_STYLE>ONLY_FOR_MULTILINE</FORCE_WHILE_BRACES_STYLE>
        <FORCE_USING_BRACES_STYLE>ONLY_FOR_MULTILINE</FORCE_USING_BRACES_STYLE>
        <FORCE_FIXED_BRACES_STYLE>ONLY_FOR_MULTILINE</FORCE_FIXED_BRACES_STYLE>
        <KEEP_BLANK_LINES_IN_DECLARATIONS>1</KEEP_BLANK_LINES_IN_DECLARATIONS>
        <KEEP_BLANK_LINES_IN_CODE>1</KEEP_BLANK_LINES_IN_CODE>
        <BLANK_LINES_BEFORE_USING>0</BLANK_LINES_BEFORE_USING>
        <BLANK_LINES_AFTER_USING>1</BLANK_LINES_AFTER_USING>
        <BLANK_LINES_AROUND_NAMESPACE>1</BLANK_LINES_AROUND_NAMESPACE>
        <BLANK_LINES_AROUND_TYPE>1</BLANK_LINES_AROUND_TYPE>
        <BLANK_LINES_AROUND_FIELD>1</BLANK_LINES_AROUND_FIELD>
        <BLANK_LINES_AROUND_SINGLE_LINE_FIELD>0</BLANK_LINES_AROUND_SINGLE_LINE_FIELD>
        <BLANK_LINES_AROUND_INVOCABLE>1</BLANK_LINES_AROUND_INVOCABLE>
        <BLANK_LINES_AROUND_SINGLE_LINE_INVOCABLE>0</BLANK_LINES_AROUND_SINGLE_LINE_INVOCABLE>
        <BLANK_LINES_AROUND_REGION>1</BLANK_LINES_AROUND_REGION>
        <BLANK_LINES_INSIDE_REGION>1</BLANK_LINES_INSIDE_REGION>
        <BLANK_LINES_BETWEEN_USING_GROUPS>0</BLANK_LINES_BETWEEN_USING_GROUPS>
        <MODIFIERS_ORDER length="14">
          <_0>public</_0>
          <_1>protected</_1>
          <_2>internal</_2>
          <_3>private</_3>
          <_4>new</_4>
          <_5>abstract</_5>
          <_6>virtual</_6>
          <_7>override</_7>
          <_8>sealed</_8>
          <_9>static</_9>
          <_10>readonly</_10>
          <_11>extern</_11>
          <_12>unsafe</_12>
          <_13>volatile</_13>
        </MODIFIERS_ORDER>
        <EXPLICIT_PRIVATE_MODIFIER>True</EXPLICIT_PRIVATE_MODIFIER>
        <EXPLICIT_INTERNAL_MODIFIER>True</EXPLICIT_INTERNAL_MODIFIER>
        <ARRANGE_MODIFIER_IN_EXISTING_CODE>True</ARRANGE_MODIFIER_IN_EXISTING_CODE>
        <ALIGN_MULTILINE_PARAMETER>True</ALIGN_MULTILINE_PARAMETER>
        <ALIGN_MULTILINE_ARGUMENT>True</ALIGN_MULTILINE_ARGUMENT>
        <ALIGN_MULTILINE_EXTENDS_LIST>True</ALIGN_MULTILINE_EXTENDS_LIST>
        <ALIGN_MULTILINE_EXPRESSION>True</ALIGN_MULTILINE_EXPRESSION>
        <ALIGN_MULTILINE_ARRAY_INITIALIZER>True</ALIGN_MULTILINE_ARRAY_INITIALIZER>
        <ALIGN_MULTLINE_TYPE_PARAMETER_LIST>True</ALIGN_MULTLINE_TYPE_PARAMETER_LIST>
        <ALIGN_MULTLINE_TYPE_PARAMETER_CONSTRAINS>True</ALIGN_MULTLINE_TYPE_PARAMETER_CONSTRAINS>
        <ALIGN_MULTILINE_FOR_STMT>True</ALIGN_MULTILINE_FOR_STMT>
        <ALIGN_MULTIPLE_DECLARATION>True</ALIGN_MULTIPLE_DECLARATION>
        <WRAP_LINES>True</WRAP_LINES>
        <WRAP_LIMIT>157</WRAP_LIMIT>
        <WRAP_BEFORE_INVOCATION_LPAR>False</WRAP_BEFORE_INVOCATION_LPAR>
        <WRAP_AFTER_INVOCATION_LPAR>False</WRAP_AFTER_INVOCATION_LPAR>
        <WRAP_BEFORE_DECLARATION_LPAR>False</WRAP_BEFORE_DECLARATION_LPAR>
        <WRAP_AFTER_DECLARATION_LPAR>False</WRAP_AFTER_DECLARATION_LPAR>
        <WRAP_BEFORE_TYPE_PARAMETER_LANGLE>False</WRAP_BEFORE_TYPE_PARAMETER_LANGLE>
        <WRAP_BEFORE_EXTENDS_COLON>False</WRAP_BEFORE_EXTENDS_COLON>
        <WRAP_BEFORE_BINARY_OPSIGN>False</WRAP_BEFORE_BINARY_OPSIGN>
        <WRAP_BEFORE_FIRST_TYPE_PARAMETER_CONSTRAINT>False</WRAP_BEFORE_FIRST_TYPE_PARAMETER_CONSTRAINT>
        <FORCE_CHOP_COMPOUND_IF_EXPRESSION>False</FORCE_CHOP_COMPOUND_IF_EXPRESSION>
        <FORCE_CHOP_COMPOUND_WHILE_EXPRESSION>False</FORCE_CHOP_COMPOUND_WHILE_EXPRESSION>
        <FORCE_CHOP_COMPOUND_DO_EXPRESSION>False</FORCE_CHOP_COMPOUND_DO_EXPRESSION>
        <WRAP_PARAMETERS_STYLE>WRAP_IF_LONG</WRAP_PARAMETERS_STYLE>
        <WRAP_ARGUMENTS_STYLE>WRAP_IF_LONG</WRAP_ARGUMENTS_STYLE>
        <WRAP_EXTENDS_LIST_STYLE>WRAP_IF_LONG</WRAP_EXTENDS_LIST_STYLE>
        <WRAP_FOR_STMT_HEADER_STYLE>CHOP_IF_LONG</WRAP_FOR_STMT_HEADER_STYLE>
        <WRAP_TERNARY_EXPR_STYLE>CHOP_IF_LONG</WRAP_TERNARY_EXPR_STYLE>
        <WRAP_MULTIPLE_DECLARATION_STYLE>CHOP_IF_LONG</WRAP_MULTIPLE_DECLARATION_STYLE>
        <WRAP_MULTIPLE_TYPE_PARAMEER_CONSTRAINTS_STYLE>CHOP_IF_LONG</WRAP_MULTIPLE_TYPE_PARAMEER_CONSTRAINTS_STYLE>
        <FORCE_ATTRIBUTE_STYLE>DO_NOT_CHANGE</FORCE_ATTRIBUTE_STYLE>
        <PLACE_ABSTRACT_ACCESSORHOLDER_ON_SINGLE_LINE>True</PLACE_ABSTRACT_ACCESSORHOLDER_ON_SINGLE_LINE>
        <PLACE_SIMPLE_ACCESSORHOLDER_ON_SINGLE_LINE>False</PLACE_SIMPLE_ACCESSORHOLDER_ON_SINGLE_LINE>
        <PLACE_SIMPLE_ACCESSOR_ON_SINGLE_LINE>True</PLACE_SIMPLE_ACCESSOR_ON_SINGLE_LINE>
        <PLACE_SIMPLE_ANONYMOUSMETHOD_ON_SINGLE_LINE>True</PLACE_SIMPLE_ANONYMOUSMETHOD_ON_SINGLE_LINE>
        <PLACE_TYPE_ATTRIBUTE_ON_SAME_LINE>False</PLACE_TYPE_ATTRIBUTE_ON_SAME_LINE>
        <PLACE_METHOD_ATTRIBUTE_ON_SAME_LINE>False</PLACE_METHOD_ATTRIBUTE_ON_SAME_LINE>
        <PLACE_ACCESSORHOLDER_ATTRIBUTE_ON_SAME_LINE>False</PLACE_ACCESSORHOLDER_ATTRIBUTE_ON_SAME_LINE>
        <PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE>True</PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE>
        <PLACE_CONSTRUCTOR_INITIALIZER_ON_SAME_LINE>True</PLACE_CONSTRUCTOR_INITIALIZER_ON_SAME_LINE>
        <INDENT_ANONYMOUS_METHOD_BLOCK>True</INDENT_ANONYMOUS_METHOD_BLOCK>
        <SPECIAL_ELSE_IF_TREATMENT>True</SPECIAL_ELSE_IF_TREATMENT>
        <INDENT_CASE_FROM_SWITCH>True</INDENT_CASE_FROM_SWITCH>
        <INDENT_NESTED_USINGS_STMT>False</INDENT_NESTED_USINGS_STMT>
        <INDENT_NESTED_FIXED_STMT>False</INDENT_NESTED_FIXED_STMT>
        <STICK_COMMENT>True</STICK_COMMENT>
        <REDUNDANT_THIS_QUALIFIER_STYLE>DO_NOT_USE</REDUNDANT_THIS_QUALIFIER_STYLE>
      </FormatSettings>
      <UsingsSettings>
        <AddImportsToDeepestScope>False</AddImportsToDeepestScope>
        <AllowAlias>True</AllowAlias>
        <PreferQualifiedReference>False</PreferQualifiedReference>
        <CanUseGlobalAlias>True</CanUseGlobalAlias>
        <SortUsings>True</SortUsings>
        <KeepImports length="0" />
        <MandatoryImports length="0" />
        <KeepNontrivialAlias>True</KeepNontrivialAlias>
      </UsingsSettings>
      <MemberOrderPattern>
        <Entry Criteria="public delegate" RegionName="" />
        <Entry Criteria="public enum" RegionName="" />
        <Entry Criteria="constant" RegionName="" />
        <Entry Criteria="static field" RegionName="" />
        <Entry Criteria="readonly field" RegionName="" />
        <Entry Criteria="field" RegionName="" />
        <Entry Criteria="constructor" RegionName="" />
        <Entry Criteria="property" RegionName="" />
        <Entry Criteria="indexer" RegionName="" />
        <Entry Criteria="eventhandler" RegionName="Event Handlers" Sort="alpha" />
        <Entry Criteria="implement" RegionName="{0} Members" Sort="immediate-interface" />
        <Entry Criteria="" RegionName="" />
        <Entry Criteria="unittest" RegionName="" Sort="alpha" />
        <Entry Criteria="type" RegionName="" />
      </MemberOrderPattern>
    </CSharp>
    <VB>
      <FormatSettings>
        <INSERT_TABS>False</INSERT_TABS>
        <INDENT_SIZE>4</INDENT_SIZE>
        <SPACE_BEFORE_INVOCATION_PARENTHESES>True</SPACE_BEFORE_INVOCATION_PARENTHESES>
        <SPACE_BEFORE_EMPTY_INVOCATION_PARENTHESES>False</SPACE_BEFORE_EMPTY_INVOCATION_PARENTHESES>
        <SPACE_BEFORE_METHOD_PARENTHESES>True</SPACE_BEFORE_METHOD_PARENTHESES>
        <SPACE_BEFORE_EMPTY_METHOD_PARENTHESES>False</SPACE_BEFORE_EMPTY_METHOD_PARENTHESES>
        <SPACE_WITHIN_INVOCATION_PARENTHESES>False</SPACE_WITHIN_INVOCATION_PARENTHESES>
        <SPACE_WITHIN_EMPTY_INVOCATION_PARENTHESES>False</SPACE_WITHIN_EMPTY_INVOCATION_PARENTHESES>
        <SPACE_WITHIN_METHOD_PARENTHESES>False</SPACE_WITHIN_METHOD_PARENTHESES>
        <SPACE_WITHIN_EMPTY_METHOD_PARENTHESES>False</SPACE_WITHIN_EMPTY_METHOD_PARENTHESES>
        <SPACE_BEFORE_TYPE_PARAMETER_PARENTHESES>True</SPACE_BEFORE_TYPE_PARAMETER_PARENTHESES>
        <SPACE_WITHIN_TYPE_PARAMETER_PARENTHESES>False</SPACE_WITHIN_TYPE_PARAMETER_PARENTHESES>
        <SPACE_WITHIN_EXPRESSION_PARENTHESES>False</SPACE_WITHIN_EXPRESSION_PARENTHESES>
        <SPACE_BEFORE_COMMA>False</SPACE_BEFORE_COMMA>
        <SPACE_AFTER_COMMA>True</SPACE_AFTER_COMMA>
        <SPACE_WITHIN_ATTRIBUTE_ANGLES>False</SPACE_WITHIN_ATTRIBUTE_ANGLES>
        <SPACE_BEFORE_ATTRIBUTE_TARGET_COLON>False</SPACE_BEFORE_ATTRIBUTE_TARGET_COLON>
        <SPACE_AFTER_ATTRIBUTE_TARGET_COLON>True</SPACE_AFTER_ATTRIBUTE_TARGET_COLON>
        <SPACE_BEFORE_ARRAY_RANK_PARENTHESES>False</SPACE_BEFORE_ARRAY_RANK_PARENTHESES>
        <SPACE_WITHIN_ARRAY_RANK_PARENTHESES>False</SPACE_WITHIN_ARRAY_RANK_PARENTHESES>
        <SPACE_WITHIN_ARRAY_RANK_EMPTY_PARENTHESES>False</SPACE_WITHIN_ARRAY_RANK_EMPTY_PARENTHESES>
        <SPACE_WITHIN_ARRAY_INITIALIZATION_BRACES>False</SPACE_WITHIN_ARRAY_INITIALIZATION_BRACES>
        <SPACE_AROUND_ASSIGNMENT_OP>True</SPACE_AROUND_ASSIGNMENT_OP>
        <SPACE_AROUND_RELATIONAL_OP>True</SPACE_AROUND_RELATIONAL_OP>
        <SPACE_AROUND_ADDITIVE_OP>True</SPACE_AROUND_ADDITIVE_OP>
        <SPACE_AROUND_MULTIPLICATIVE_OP>False</SPACE_AROUND_MULTIPLICATIVE_OP>
        <SPACE_AROUND_SHIFT_OP>True</SPACE_AROUND_SHIFT_OP>
        <SPACE_AROUND_DOT>False</SPACE_AROUND_DOT>
        <SPACE_BEFORE_LABEL_COLON>False</SPACE_BEFORE_LABEL_COLON>
        <SPACE_AROUND_STMT_COLON>True</SPACE_AROUND_STMT_COLON>
        <KEEP_BLANK_LINES_IN_DECLARATIONS>2</KEEP_BLANK_LINES_IN_DECLARATIONS>
        <KEEP_BLANK_LINES_IN_CODE>2</KEEP_BLANK_LINES_IN_CODE>
        <KEEP_USER_LINEBREAKS>True</KEEP_USER_LINEBREAKS>
        <BLANK_LINES_AFTER_OPTIONS>1</BLANK_LINES_AFTER_OPTIONS>
        <BLANK_LINES_AFTER_IMPORTS>1</BLANK_LINES_AFTER_IMPORTS>
        <BLANK_LINES_AROUND_GLOBAL_ATTRIBUTE>0</BLANK_LINES_AROUND_GLOBAL_ATTRIBUTE>
        <BLANK_LINES_AROUND_NAMESPACE>1</BLANK_LINES_AROUND_NAMESPACE>
        <BLANK_LINES_AROUND_TYPE>1</BLANK_LINES_AROUND_TYPE>
        <BLANK_LINES_AROUND_FIELD>1</BLANK_LINES_AROUND_FIELD>
        <BLANK_LINES_AROUND_INVOCABLE>1</BLANK_LINES_AROUND_INVOCABLE>
        <BLANK_LINES_AROUND_SINGLE_LINE_INVOCABLE>0</BLANK_LINES_AROUND_SINGLE_LINE_INVOCABLE>
        <BLANK_LINES_AROUND_SINGLE_LINE_FIELD>0</BLANK_LINES_AROUND_SINGLE_LINE_FIELD>
        <BLANK_LINES_AROUND_REGION>1</BLANK_LINES_AROUND_REGION>
        <BLANK_LINES_INSIDE_REGION>1</BLANK_LINES_INSIDE_REGION>
        <WRAP_LINES>True</WRAP_LINES>
        <WRAP_LIMIT>120</WRAP_LIMIT>
        <WRAP_BEFORE_INVOCATION_LPAR>False</WRAP_BEFORE_INVOCATION_LPAR>
        <WRAP_BEFORE_DECLARATION_LPAR>False</WRAP_BEFORE_DECLARATION_LPAR>
        <WRAP_BEFORE_BINARY_OPSIGN>False</WRAP_BEFORE_BINARY_OPSIGN>
        <WRAP_PARAMETERS_STYLE>WRAP_IF_LONG</WRAP_PARAMETERS_STYLE>
        <WRAP_ARGUMENTS_STYLE>WRAP_IF_LONG</WRAP_ARGUMENTS_STYLE>
        <WRAP_EXTENDS_LIST_STYLE>WRAP_IF_LONG</WRAP_EXTENDS_LIST_STYLE>
        <WRAP_MULTIPLE_DECLARATION_STYLE>CHOP_IF_LONG</WRAP_MULTIPLE_DECLARATION_STYLE>
        <ALIGN_MULTILINE_PARAMETER>True</ALIGN_MULTILINE_PARAMETER>
        <ALIGN_MULTILINE_ARGUMENT>True</ALIGN_MULTILINE_ARGUMENT>
        <ALIGN_MULTILINE_IMPLEMENTS_LIST>True</ALIGN_MULTILINE_IMPLEMENTS_LIST>
        <ALIGN_MULTILINE_EXPRESSION>True</ALIGN_MULTILINE_EXPRESSION>
        <ALIGN_MULTILINE_ARRAY_INITIALIZER>True</ALIGN_MULTILINE_ARRAY_INITIALIZER>
        <ALIGN_MULTIPLE_DECLARATION>True</ALIGN_MULTIPLE_DECLARATION>
        <PLACE_TYPE_ATTRIBUTE_ON_SAME_LINE>False</PLACE_TYPE_ATTRIBUTE_ON_SAME_LINE>
        <PLACE_METHOD_ATTRIBUTE_ON_SAME_LINE>False</PLACE_METHOD_ATTRIBUTE_ON_SAME_LINE>
        <PLACE_PROPERTY_ATTRIBUTE_ON_SAME_LINE>False</PLACE_PROPERTY_ATTRIBUTE_ON_SAME_LINE>
        <PLACE_EVENT_ATTRIBUTE_ON_SAME_LINE>False</PLACE_EVENT_ATTRIBUTE_ON_SAME_LINE>
        <PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE>True</PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE>
        <INDENT_CASE_FROM_SELECT>True</INDENT_CASE_FROM_SELECT>
        <STICK_COMMENT>True</STICK_COMMENT>
      </FormatSettings>
    </VB>
    <SkipRegions length="4">
      <_0>Windows Form Designer generated code</_0>
      <_1>Component Designer generated code</_1>
      <_2>Designer generated code</_2>
      <_3>Web Form Designer generated code</_3>
    </SkipRegions>
  </CodeStyleSettings>
  <SharedSolutionTemplateManager>
    <LiveTemplates>
      <Folder name="Shared Solution Templates">
        <Folder name="Test">
          <Template uid="c0b95d48-cef0-4b84-af46-f8ee7db232c2" text="[Test]&#xD;&#xA;public void $MethodName$(){&#xD;&#xA;$END$Assert.Fail(&quot;not yet implemented&quot;);&#xD;&#xA;}" shortcut="test" description="create test method" reformat="true" shortenQualifiedReferences="true">
            <Variables>
              <Variable name="MethodName" expression="" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
          <Template uid="2c169869-acf1-44ec-9f51-41a15347a6c0" text="[SetUp]&#xD;&#xA;public void SetUp()&#xD;&#xA;{&#xD;&#xA;   &#xD;&#xA;}" shortcut="setup" description="test setup" reformat="true" shortenQualifiedReferences="true">
            <Variables />
            <CustomProperties />
          </Template>
          <Template uid="c65b5493-6e50-4b69-8fe1-1c8a2cc5527d" text="MockRepository mocks = new MockRepository();&#xD;&#xA;$OBJECTTYPE$ $OBJECTNAME$ = mocks.CreateMock&lt;$OBJECTTYPE$&gt;();&#xD;&#xA;mocks.ReplayAll();" shortcut="mocks" description="Create Mock Repostory and call replay all" reformat="true" shortenQualifiedReferences="true">
            <Variables>
              <Variable name="OBJECTTYPE" expression="" initialRange="0" />
              <Variable name="OBJECTNAME" expression="" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
          <Template uid="2cc28028-eca2-4032-9bc8-1aeb5f579eda" text="$OBJECTTYPE$ $OBJECTNAME$ = mocks.CreateMock&lt;$OBJECTTYPE$&gt;();" shortcut="mock" description="Create a new mock" reformat="true" shortenQualifiedReferences="true">
            <Variables>
              <Variable name="OBJECTTYPE" expression="" initialRange="0" />
              <Variable name="OBJECTNAME" expression="" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
          <Template uid="6a0c888a-c1d3-48b8-870e-11db25a52349" text="Assert.AreEqual($expected$, $actual$);" shortcut="asse" description="assert equals" reformat="true" shortenQualifiedReferences="true">
            <Variables>
              <Variable name="expected" expression="" initialRange="0" />
              <Variable name="actual" expression="" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
          <Template uid="43f591b7-6022-4a34-865b-f10039aff28a" text="Assert.AreEqual(true, $ACTUAL$);" shortcut="asst" description="Assert Is True" reformat="true" shortenQualifiedReferences="true">
            <Variables>
              <Variable name="ACTUAL" expression="" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
          <Template uid="6dfa7645-42d1-4738-b4c4-601c0f1c1f7c" text="SetupResult.For($METHODCALL$).Return($RETURNVALUE$);" shortcut="setr" description="SetUp Result" reformat="true" shortenQualifiedReferences="true">
            <Variables>
              <Variable name="METHODCALL" expression="" initialRange="0" />
              <Variable name="RETURNVALUE" expression="" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
          <Template uid="fa639f9e-dd50-4451-8411-99b19a11f328" text="Assert.AreEqual(false, $ACTUAL$);" shortcut="assf" description="" reformat="true" shortenQualifiedReferences="true">
            <Variables>
              <Variable name="ACTUAL" expression="" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
          <Template uid="694e56a0-2990-48d1-9483-2d9f49f4f558" text="Expect.Call($method$).Return($returnValue$);" shortcut="expect" description="Expectation" reformat="true" shortenQualifiedReferences="true">
            <Variables>
              <Variable name="method" expression="" initialRange="0" />
              <Variable name="returnValue" expression="" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
          <Template uid="f010ec15-53f7-4b36-b65f-b4b3f83d286d" text="Assert.AreNotEqual(null, $ACTUAL$);" shortcut="assnn" description="assert not null" reformat="true" shortenQualifiedReferences="true">
            <Variables>
              <Variable name="ACTUAL" expression="" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
          <Template uid="58d87d29-a52c-4441-9cfa-e3849a5f96f3" text="[TearDown]&#xD;&#xA;public void TearDown()&#xD;&#xA;{&#xD;&#xA;$END$&#xD;&#xA;}" shortcut="tear" description="" reformat="true" shortenQualifiedReferences="true">
            <Variables />
            <CustomProperties />
          </Template>
          <Template uid="170a07d0-4b54-410f-8de9-6d25d9d3e44e" text="Assert.IsNotEmpty($1$);" shortcut="aine" description="" reformat="true" shortenQualifiedReferences="true">
            <Variables>
              <Variable name="1" expression="" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
          <Template uid="47ea7ee1-75c9-4ac3-8dbe-d0e56113df42" text="Assert.AreEqual(null, $ACTUAL$);" shortcut="assn" description="assert null" reformat="true" shortenQualifiedReferences="true">
            <Context>
              <CSharpContext context="Expression" />
            </Context>
            <Variables>
              <Variable name="ACTUAL" expression="" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
          <Template uid="aba8f0d6-b7aa-46fc-8ef8-62b37ee0fd6f" text="Assert.AreNotEqual($NOTEXPECTED$, $ACTUAL$);" shortcut="assne" description="" reformat="true" shortenQualifiedReferences="true">
            <Variables>
              <Variable name="NOTEXPECTED" expression="" initialRange="0" />
              <Variable name="ACTUAL" expression="" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
          <Template uid="8b0dc558-2fb5-4f85-9f4f-b97a301d8a63" text="            LunarAssert.Contains($EXPECTED$, $ACTUAL$);" shortcut="cont" description="" reformat="true" shortenQualifiedReferences="true">
            <Variables>
              <Variable name="EXPECTED" expression="guessExpectedType()" initialRange="0" />
              <Variable name="ACTUAL" expression="guessExpectedType()" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
        </Folder>
        <Folder name="Trace">
          <Template uid="ed3bf2bb-42df-443a-bc00-fbe46b760a27" text="CodePath.Get(CodePath.New&lt;$var1$&gt;().$var2$)" shortcut="code" description="code path" reformat="true" shortenQualifiedReferences="true">
            <Variables>
              <Variable name="var1" expression="guessExpectedType()" initialRange="0" />
              <Variable name="var2" expression="suggestVariableName()" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
          <Template uid="e1294e36-3cfd-4cdb-bf15-cad3dcfa3c09" text="Trace.MemberPath(Trace.New&lt;$var1$&gt;().$var2$)" shortcut="path" description="trace member path" reformat="true" shortenQualifiedReferences="true">
            <Variables>
              <Variable name="var1" expression="guessExpectedType()" initialRange="0" />
              <Variable name="var2" expression="suggestVariableName()" initialRange="0" />
            </Variables>
            <CustomProperties />
          </Template>
        </Folder>
        <Folder name="UIAutomation">
          <Template uid="28cbf51d-d7d8-4c51-a9de-dd5e0d58ce68" text="AutomationElement" shortcut="ae" description="AutomationElement" reformat="false" shortenQualifiedReferences="true">
            <Variables />
            <CustomProperties />
          </Template>
        </Folder>
      </Folder>
    </LiveTemplates>
    <Surrounds>
      <Folder name="Shared Solution Templates">
        <Template uid="e414d8f5-9ab9-4cad-88dc-12101fbf2eb0" text="typeof=($SELECTION$)" shortcut="" description="typof" reformat="true" shortenQualifiedReferences="true">
          <Variables />
          <CustomProperties />
        </Template>
        <Template uid="b6cdff72-2f9d-4e06-b343-4fea2328211c" text="&quot;$SELECTION$&quot;" shortcut="" description="toString" reformat="true" shortenQualifiedReferences="true">
          <Variables />
          <CustomProperties />
        </Template>
        <Template uid="be4d5716-42a1-49d0-a8ad-723bb350c855" text="($SELECTION$)" shortcut="" description="()" reformat="true" shortenQualifiedReferences="true">
          <Variables />
          <CustomProperties />
        </Template>
      </Folder>
    </Surrounds>
    <FileTemplates>
      <Folder name="Shared Solution Templates">
        <Folder name="UIAutomation">
          <Template uid="e2ccf159-b674-4b56-9548-379e73079651" text="using System.Windows.Automation;&#xD;&#xA;using Core.UIItems.Actions;&#xD;&#xA;&#xD;&#xA;namespace $NAMESPACE$&#xD;&#xA;{&#xD;&#xA;  public class $CLASS$ : UIItem&#xD;&#xA;  {&#xD;&#xA;   public $CLASS$(AutomationElement automationElement, ActionListener actionListener) : base(automationElement, actionListener){}&#xD;&#xA;  }&#xD;&#xA;}" shortcut="Class" description="UI Item" reformat="true" shortenQualifiedReferences="true">
            <Context>
              <ProjectLanguageContext language="CSharp" />
            </Context>
            <Variables>
              <Variable name="CLASS" expression="getFileNameWithoutExtension()" initialRange="-1" />
              <Variable name="NAMESPACE" expression="fileDefaultNamespace()" initialRange="-1" />
            </Variables>
            <CustomProperties>
              <Property key="FileName" value="Test" />
              <Property key="Extension" value="cs" />
            </CustomProperties>
          </Template>
        </Folder>
        <Template uid="04d38fb1-9e45-4aab-8549-443358f414d6" text="using NUnit.Framework;&#xD;&#xA;&#xD;&#xA;namespace $NAMESPACE$&#xD;&#xA;{&#xD;&#xA;  [TestFixture]&#xD;&#xA;  public class $CLASS$ &#xD;&#xA;  {&#xD;&#xA;    test$END$&#xD;&#xA;  }&#xD;&#xA;}" shortcut="Class" description="Test" reformat="true" shortenQualifiedReferences="true">
          <Context>
            <ProjectLanguageContext language="CSharp" />
          </Context>
          <Variables>
            <Variable name="CLASS" expression="getFileNameWithoutExtension()" initialRange="-1" />
            <Variable name="NAMESPACE" expression="fileDefaultNamespace()" initialRange="-1" />
          </Variables>
          <CustomProperties>
            <Property key="FileName" value="Test" />
            <Property key="Extension" value="cs" />
          </CustomProperties>
        </Template>
        <Template uid="19cc012c-37d3-4909-8392-395490f7b7ea" text="using System;&#xD;&#xA;&#xD;&#xA;namespace $NAMESPACE$&#xD;&#xA;{&#xD;&#xA;  public class $CLASS$ : Exception&#xD;&#xA;  {&#xD;&#xA;      public $CLASS$(string message) : base(message) {}&#xD;&#xA;      public $CLASS$(string message, Exception exception) : base(message, exception) {}&#xD;&#xA;  }&#xD;&#xA;}" shortcut="Class" description="Exception" reformat="true" shortenQualifiedReferences="true">
          <Context>
            <ProjectLanguageContext language="CSharp" />
          </Context>
          <Variables>
            <Variable name="CLASS" expression="getFileNameWithoutExtension()" initialRange="-1" />
            <Variable name="NAMESPACE" expression="fileDefaultNamespace()" initialRange="-1" />
          </Variables>
          <CustomProperties>
            <Property key="FileName" value="Exception" />
            <Property key="Extension" value="cs" />
          </CustomProperties>
        </Template>
      </Folder>
    </FileTemplates>
  </SharedSolutionTemplateManager>
</Configuration>